// Code generated by Nexus Automation, DO NOT EDIT.

package events

import (
	"github.com/nexusmed/nexusmed-go/client"
)

type Client struct {
	*client.Client
}

func New(interceptors ...client.RequestInterceptor) *Client {
	return &Client{client.New("/events/graphql", interceptors...)}
}

type Query struct {
	GetEvent          *Event      "json:\"getEvent\" graphql:\"getEvent\""
	GetEvents         []*Event    "json:\"getEvents\" graphql:\"getEvents\""
	GetEndpoint       *Endpoint   "json:\"getEndpoint\" graphql:\"getEndpoint\""
	GetEndpoints      []*Endpoint "json:\"getEndpoints\" graphql:\"getEndpoints\""
	GetEndpointSecret *string     "json:\"getEndpointSecret\" graphql:\"getEndpointSecret\""
}
type Mutation struct {
	CreateEndpoint *Endpoint "json:\"createEndpoint\" graphql:\"createEndpoint\""
	UpdateEndpoint *Endpoint "json:\"updateEndpoint\" graphql:\"updateEndpoint\""
	DeleteEndpoint *bool     "json:\"deleteEndpoint\" graphql:\"deleteEndpoint\""
}
type GetEvent struct {
	GetEvent *struct {
		ID        string  "json:\"id\" graphql:\"id\""
		Type      *string "json:\"type\" graphql:\"type\""
		AccountID *string "json:\"account_id\" graphql:\"account_id\""
		CreatedAt *string "json:\"created_at\" graphql:\"created_at\""
		Data      *struct {
			Object map[string]interface{} "json:\"object\" graphql:\"object\""
		} "json:\"data\" graphql:\"data\""
	} "json:\"getEvent\" graphql:\"getEvent\""
}

const GetEventDocument = `query GetEvent ($id: ID!) {
	getEvent(id: $id) {
		id
		type
		account_id
		created_at
		data {
			object
		}
	}
}
`

func (c *Client) GetEvent(id string, interceptors ...client.RequestInterceptor) (*GetEvent, error) {
	vars := map[string]interface{}{
		"id": id,
	}

	var res GetEvent
	if err := c.Client.Post("GetEvent", GetEventDocument, &res, vars, interceptors...); err != nil {
		return nil, err
	}

	return &res, nil
}
